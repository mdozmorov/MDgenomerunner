% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gr_degfs.R
\name{gr_degfs}
\alias{gr_degfs}
\title{Defines epigenetic marks differentially enriched between clusters}
\usage{
gr_degfs(mtx, clust, cutoff.pval = 0.1, cutoff.adjust = "fdr",
  isOR = FALSE, p2z = FALSE, nperm = NULL, fileName = NULL)
}
\arguments{
\item{mtx}{a matrix of transformed p-values or odds-ratios}

\item{clust}{clustering definition object from the 'gr_clusters' function}

\item{cutoff.pval}{p-value cutoff to use when testing for differential 
enrichment. Default - 0.1}

\item{cutoff.adjust}{a method to correct p-values for multiple testing. 
Default - FDR.}

\item{isOR}{logical. Indicates the origin of the transformed values. Used to 
properly convert their average values into decimal scale. Default - FALSE,
the supplied mtx is a matrix of -log10-transformed p-values.}

\item{p2z}{logical. Indicates whether instead of -log10-transformation use
Z-scores. Default - FALSE. Does not affect the need to supply transformed p-values}

\item{nperm}{if not NULL, differentially enrished p-values are calculated
using permutations. Use at least 10000 permutations.}

\item{fileName}{a name of an Excel file to save the differential enrichment
analysis results. Each pair-wise comparison (e.g., c1_vs_c2) will be saved
in a corresponding worksheet. Default - none. Example - "degfs.xsls"}
}
\value{
prints a summary of the counts of differentially enriched marks

returns a list of pair-wise cluster comparison results, each element
corresponds to each comparison (e.g., res$c1_vs_c2)
}
\description{
A function that compares enrichment values between pairs of clusters.
}
\note{
Permutation test shall be redone per 
\preformatted{
Phipson B, Smyth GK: Permutation P-values should never be zero: 
calculating exact P-values when permutations are randomly drawn. 
Stat Appl Genet Mol Biol 2010, 9:Article39.
}
}
\examples{
\dontrun{
mtx <- gr_load_data("matrix_PVAL.txt") \%>\% gr_transform # Load p-values and -log10-transform them
cluster1 <- hclust(as.dist(1 - cor(mtx)))
plot(cluster1) # Look at the clustering dendrogram and decide height at which to cut
mtx.clust <- gr_clusters(as.dendrogram(cluster1), height = 3) # Create clustering object
res <- mtx.degfs(mtx, mtx.clust)
}
}

